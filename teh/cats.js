#!/usr/bin/env node
//const { spawn } = require('child_process')
const readline = require('readline')
const { format } = require('util')

const main = async ({ stderr, stdin, stdout }) => {
	const log = (fmt, ...args) => stderr.write(format(`%s: ${fmt}\n`, new Date().toISOString(), ...args))
	const lines = readline.createInterface({
		crlfDelay: Infinity,
		input: stdin,
	})
	const state = {
		lines: 0,
	}
	const _line = (line, s = state) => {
		stdout.write(format('%s\n', line))
		s.lines += 1
	}
	await new Promise((resolve, reject) => {
		lines.on('line', _line)
		lines.once('error', reject)
		lines.once('close', resolve)
	})
	log('after parse: %j', state)
}

if (!module.parent) {
	// parse output to detect mouse key events generated by pedal
	// USAGE: od -t x1 -w3 < /dev/input/mice | node __filename
	// cat /proc/bus/input/devices # or: ls -hal /dev/input/*
	const p = process
	main(p).catch((err) => {
		console.error(err)
		process.exit(1)
	})
}
