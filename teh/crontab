# Edit this file to introduce tasks to be run by cron.
#
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
#
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
#
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
#
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
#
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:
# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/
#
# For more information see the manual pages of crontab(5) and cron(8)
#
# m h  dom mon dow   command

# feed the cat every day at 6am and 6pm (skip older set)
0  6 * * * /opt/teh/cats.py feed >> /opt/teh/cats.log 2>&1
#0 10 * * * /opt/teh/cats.py feed >> /opt/teh/cats.log 2>&1 # 10am
#0 14 * * * /opt/teh/cats.py feed >> /opt/teh/cats.log 2>&1 #  2pm
0 18 * * * /opt/teh/cats.py feed >> /opt/teh/cats.log 2>&1
#0 22 * * * /opt/teh/cats.py feed >> /opt/teh/cats.log 2>&1 # 10pm

# start "reverse" access tunnel to VPC (if not already running)
* * * * * [ -n "$(pidof ssh)" ] || /opt/teh/cats.sh rssh >> /opt/teh/cats.log 2>&1
# if the foot pedal event listener isn't running, start it logging to the same file
* * * * * [ -n "$(pgrep -u pi -f mice.py)" ] || /opt/teh/mice.py >> /opt/teh/cats.log 2>&1
